
Laravel 的 Eloquent ORM 模型

使用命令创建模型文件： php artisan make:model Model\User  此时文件生成位置/app/Model/User.php  如果类中不配置表名则是文件名+s 全小写 如users
			
数据库配置文件：  /config/database.php
<?php
	return [
		'fetch' => PDO::FETCH_CLASS,
		//默认db连接名
		'default' => 'mysql',
		//db连接配置，connections['连接名']=array(配置)
		'connections' => [
			'sqlite' => [
				'driver'   => 'sqlite',
				'database' => storage_path().'/database.sqlite',
				'prefix'   => '',
			],
			'mysql' => [
				'driver'    => 'mysql',
				'host'      => env('DB_HOST', 'localhost'),
				'database'  => env('DB_DATABASE', 'forge'),
				'username'  => env('DB_USERNAME', 'forge'),
				'password'  => env('DB_PASSWORD', ''),
				'charset'   => 'utf8',
				'collation' => 'utf8_unicode_ci',
				'prefix'    => '',
				'strict'    => false,
			],
			'pgsql' => [
				'driver'   => 'pgsql',
				'host'     => env('DB_HOST', 'localhost'),
				'database' => env('DB_DATABASE', 'forge'),
				'username' => env('DB_USERNAME', 'forge'),
				'password' => env('DB_PASSWORD', ''),
				'charset'  => 'utf8',
				'prefix'   => '',
				'schema'   => 'public',
			],
			'sqlsrv' => [
				'driver'   => 'sqlsrv',
				'host'     => env('DB_HOST', 'localhost'),
				'database' => env('DB_DATABASE', 'forge'),
				'username' => env('DB_USERNAME', 'forge'),
				'password' => env('DB_PASSWORD', ''),
				'prefix'   => '',
			],
		],
		'migrations' => 'migrations',
		//redis配置
		'redis' => [
			'cluster' => false,
			'default' => [
				'host'     => '127.0.0.1',
				'port'     => 6379,
				'database' => 0,
			],

		],

	];
//查询构造器
$users = DB::table('users')->get();//等价  $users = DB::table('users')->getFresh();
foreach ($users as $user)
{
    var_dump($user->name);
}

DB::table('users') 等价 DB::connection('default连接代号')->table('users');返回\Illuminate\Database\Query\Builder 类对象
执行顺序：
1. 先执行 \Illuminate\Database\DatabaseManager->__call('table'', 'user')
2. \Illuminate\Database\MySqlConnection类对象->table('user'); 此时返回\Illuminate\Database\Query\Builder 类对象
3. \Illuminate\Database\Query\Builder 类对象->get(); //返回多条记录结果集，array,PDOStatement::fetchAll()— 返回一个包含结果集中所有行的数组
4. 其中get()调用了\Illuminate\Database\Query\Grammars\MySqlGrammar类对象->compileSelect(Builder $query查询构建对象):拼接select语句方法
5.


$user = DB::table('users')->where('name', 'John')->first(); //返回一条记录的结果集,PDOStatement::fetchAll()返回一个包含结果集中所有行的数组中的第1个单元
$name = DB::table('users')->where('name', 'John')->pluck('name字段名');//返回一条记录的name字段值

join对象(Illuminate\Database\Query\JoinClause类名)属性有：{
    table:表名,
    clauses: ['first'=>'', 'operator'=>'is、or、and', 'second'=>'', 'boolean'=>'', 'where'=>''],
    bindings: [值1,值n] ,
    type: 如inner、left、right,

}
